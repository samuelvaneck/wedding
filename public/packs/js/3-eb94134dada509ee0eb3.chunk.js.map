{"version":3,"file":"js/3-eb94134dada509ee0eb3.chunk.js","sources":["webpack:///./app/javascript/packs/admin/donut_percentage.js"],"sourcesContent":["function percentageChart(id) {\n  const duration    = 1500;\n  const transition  = 200;\n  const width       = 170;\n  const height      = 170;\n  const percentage  = $(id).attr(\"data-percentage\");\n  const dataset     = { lower: calcPercent(0),\n                        upper: calcPercent(percentage) \n                      };\n\n  const radius      = Math.min(width, height) / 3;\n  let pie           = d3.pie().sort(null);\n  let format        = d3.format(\".0%\"); \n  const color       = d3.scaleOrdinal([\"#00539C\", \"#EEEEEE\"])\n  const arc         = d3.arc()\n                        .innerRadius(radius * .95)\n                        .outerRadius(radius);\n  let svg           = d3.select(id).append(\"svg\")\n                        .attr(\"width\", width)\n                        .attr(\"height\", height)\n                        .append(\"g\")\n                        .attr(\"transform\", \"translate(\" + width/2 + \",\" + height/2 + \")\");\n  let path          = svg.selectAll(\"path\")\n                         .data(pie(dataset.lower))\n                         .enter().append(\"path\")\n                         .attr(\"fill\", (d, i) => { return color(i); })\n                         .attr(\"d\", arc)\n                         .each((d) => {\n                           this._current = d;\n                         });\n  let text          = svg.append(\"text\")\n                         .attr(\"text-anchor\", \"middle\")\n                         .attr(\"dy\", \".3em\");\n                \n  let progress = 0;\n  setTimeout(() => {\n    path = path.data(pie(dataset.upper));\n    path.transition().duration(duration).attrTween(\"d\", (d) => {\n      const dp = d3.interpolate(this._current, d)\n      const p = d3.interpolate(progress, percentage);\n      \n      return function(t) {\n        text.text(format(p(t) / 100));\n        return arc(dp(t));\n      }\n    });\n  }, transition);\n\n\n  function calcPercent(percentage) {\n    return [parseInt(percentage), 100 - parseInt(percentage)]\n  }\n}\n"],"mappings":";;;;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AAGA;AAKA;AAGA;AAAA;AAGA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;A","sourceRoot":""}